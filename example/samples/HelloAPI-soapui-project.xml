<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="5c3212e2-6f93-4cea-81e8-362197cecfdc" activeEnvironment="Default" name="HelloAPI" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="5cc6f59e-b0b7-435b-a399-408586cc01fb" wadlVersion="http://wadl.dev.java.net/2009/02" name="Hello API" type="rest" basePath="/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>This is a sample Hello API</con:description><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://api.example.com</con:endpoint><con:endpoint>http://lbroudoux-OSX.local:8089/</con:endpoint></con:endpoints><con:resource name="/hello" path="/hello" id="137db4ce-c54f-4373-af1f-867b1adc6096"><con:settings/><con:parameters/><con:method name="getGreeting" id="c3b20b14-81c2-4ec9-abc2-cfb0c6025115" method="GET"><con:description>Get a new greeting message
Get a new greeting message</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:style>QUERY</con:style><con:description>Name of people to greet</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:request name="Request 1" id="8d9f58a8-45a7-4c3e-a9d6-aeb6334329c8" mediaType="application/json"><con:settings/><con:endpoint>http://api.example.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="62af16cd-3796-4dbf-b0f0-3416db326b01" name="Hello API TestSuite"><con:description>TestSuite generated for REST Service [Hello API]</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="bc82b283-b5bc-422c-b7c7-04bcaac4270b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/hello TestCase" searchProperties="true"><con:description>TestCase generated for REST Resource [/hello] located at [/hello]</con:description><con:settings/><con:testStep type="restrequest" name="David Request" id="a6bbe0a8-413a-42d8-810c-b5cad34eea2b"><con:settings/><con:config service="Hello API" resourcePath="/v1/hello" methodName="getGreeting" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="David Request" id="8d9f58a8-45a7-4c3e-a9d6-aeb6334329c8" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://lbroudoux-OSX.local:8089/</con:endpoint><con:request/><con:originalUri>http://lbroudoux-OSX.local/v1/hello</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="329eba81-cd27-4522-a5ca-a0e1cafc7ec4" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7394cfdf-b3c9-4d34-ae8b-110e41a2b9d8" name="JsonPath Match"><con:configuration><path>greeting</path><content>Hello David !</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="d6fe616f-5223-4d24-9f6b-23043cfcc147" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="name" value="David" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Gavin Request" id="ac1c9a11-6e65-425f-b9aa-7a20bbf09e41"><con:settings/><con:config service="Hello API" methodName="getGreeting" resourcePath="/v1/hello" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Gavin Request" id="c848f8c4-581a-4f86-89a0-fb105e27d79e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://lbroudoux-OSX.local:8089/</con:endpoint><con:request/><con:originalUri>http://lbroudoux-OSX.local/v1/hello</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9d065067-859d-4d06-a673-5511144f0f92" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9f43636f-d92d-4fd4-b37c-3c652d5482e5" name="JsonPath Match"><con:configuration><path>greeting</path><content>Hello Gavin !</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="b159c170-d09c-4123-9a6b-d18d2a517aa7" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="name" value="Gavin" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id="107a3cf2-b296-435c-bcd8-130f932965fa" port="8089" path="/" host="lbroudoux-OSX.local" name="Hello API Mock"><con:settings/><con:properties><con:property><con:name>version</con:name><con:value>0.8</con:value></con:property></con:properties><con:restMockAction name="/v1/hello" method="GET" resourcePath="/v1/hello" id="45ced2ad-a1a9-40f5-a65e-c14bd4501c32"><con:settings/><con:defaultResponse>Unknwon Response</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("David") )
{
    // return the name of the response you want to dispatch
    return "David Response"
}
else if( queryString.contains("Gavin") )
{
    // return the name of the response you want to dispatch
    return "Gavin Response"
}
else return "Unknown Response"</con:dispatchPath><con:response name="David Response" id="c6f2e949-26eb-4ed7-959e-f1ff59526bf8" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	'name':'David',
	'greeting':'Hello David !'
}
</con:responseContent></con:response><con:response name="Gavin Response" id="ec02e3bf-05a4-4ed3-9c5a-73508c34bfbb" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	'name':'Gavin',
	'greeting':'Hello Gavin !'
}
</con:responseContent></con:response><con:response name="Unknwon Response" id="fa7d6da7-e95c-43ff-a120-2961bdf463ea" httpResponseStatus="405" mediaType="application/json"><con:settings/><con:responseContent/></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>